version: "3"
services:
  zookeeper:
    container_name: "zookeeper"
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    container_name: "kafka"
    image: wurstmeister/kafka:latest
    ports:
      - "9094:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  credentials_db:
    image: "postgres:latest"
    container_name: "UserCredentialsDatabase"
    environment:
      - "POSTGRES_DB=user_credentials_database"
      - "POSTGRES_PASSWORD=secret"
      - "POSTGRES_USER=admin"
    ports:
      - "5432"

  chats_db:
    image: "postgres:latest"
    container_name: "ChatsDatabase"
    environment:
      - "POSTGRES_DB=chats_database"
      - "POSTGRES_PASSWORD=secret"
      - "POSTGRES_USER=admin"
    ports:
      - "5435:5432"

  user_details_db:
    image: "postgres:latest"
    container_name: "UserPersonalInfoDatabase"
    environment:
      - "POSTGRES_DB=user_personal_info_database"
      - "POSTGRES_PASSWORD=secret"
      - "POSTGRES_USER=admin"
    ports:
      - "5433:5432"

  eureka:
    container_name: "EurekaServer"
    image: eureka:latest
    ports:
      - "8090:8090"
    volumes:
      - ./logs/eureka:/app/logs

  usermanagementservice:
    container_name: "UserManagementService"
    image: usermanagementservice:latest
    ports:
      - "8060:8060"
    volumes:
      - ./logs/usermanagementservice:/app/logs
    depends_on:
      - kafka
      - user_details_db

  chatservice:
    container_name: "ChatService"
    image: chatservice:latest
    ports:
      - "8100:8100"
    volumes:
      - ./logs/chatservice:/app/logs
    depends_on:
      - kafka
      - chats_db

  authservice:
    container_name: "AuthService"
    image: authservice:latest
    ports:
      - "8070:8070"
    volumes:
      - ./logs/authservice:/app/logs
    depends_on:
      - kafka
      - credentials_db
      - eureka

  apigateway:
    container_name: "APIGateway"
    image: apigateway:latest
    ports:
      - "8080:8080"
    volumes:
      - ./logs/apigateway:/app/logs
    depends_on:
      - kafka
      - eureka
      - authservice
      - chatservice
      - usermanagementservice
