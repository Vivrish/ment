name: Deploy pipeline

on:
  push:
    branches:
      - deploy
  pull_request:
    branches:
      - deploy
  workflow_dispatch:

jobs:
  publish-dto-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: publish the DTO package
        env:
          USERNAME: ${{github.actor}}
          TOKEN: ${{secrets.PAT}}
        run: |
          cd Microservices/dto
          ./gradlew build publish

  unit-tests:
    needs: publish-dto-package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - ApiGateway
          - AuthenticationService
          - UserManagementService
          - ChatService

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run unit tests
        env:
          USERNAME: ${{github.actor}}
          TOKEN: ${{secrets.PAT}}
        run: |
          cd Microservices/${{ matrix.service }}
          ./gradlew test --no-daemon

  build:
    needs: publish-dto-package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - ApiGateway
          - AuthenticationService
          - UserManagementService
          - ChatService
          - EurekaServer

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        env:
          USERNAME: ${{github.actor}}
          TOKEN: ${{secrets.PAT}}
          SPRING_PROFILES_ACTIVE: cloud
        run: |
          cd Microservices/${{ matrix.service }}
          ./gradlew build -x test --no-daemon

      - name: login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker images
        env:
          ApiGateway: apigateway
          AuthenticationService: authservice
          UserManagementService: usermanagementservice
          ChatService: chatservice
          EurekaServer: eureka
        run: |
          cd Microservices/${{ matrix.service }}  
          docker build -t $${{ matrix.service }} .

      - name: Push Docker images to registry
        env:
          DOCKER_REGISTRY: ghcr.io
          ApiGateway: apigateway
          AuthenticationService: authservice
          UserManagementService: usermanagementservice
          ChatService: chatservice
          EurekaServer: eureka
        run: |
          docker tag $${{ matrix.service }} $DOCKER_REGISTRY/vivrish/$${{ matrix.service }}:latest
          docker push $DOCKER_REGISTRY/vivrish/$${{ matrix.service }}:latest

  integration-tests:
    needs: publish-dto-package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Run integration tests
        env:
          USERNAME: ${{github.actor}}
          TOKEN: ${{secrets.PAT}}
        run: |
          cd Microservices/ApiGateway
          ./gradlew integrationTest --no-daemon

  deploy:
    needs: [unit-tests, integration-tests, build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - ApiGateway
          - AuthenticationService
          - UserManagementService
          - ChatService
          - UserManagementService
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install the gcloud cli
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          install_components: "gke-gcloud-auth-plugin"
          export_default_credentials: true

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials xent-cluster --zone europe-central2

      - name: Deploy to GKE
        run: |
          cd Microservices/K8s/${{matrix.service}}
          kubectl apply -f Deployment.yml
          kubectl apply -f Service.yml
